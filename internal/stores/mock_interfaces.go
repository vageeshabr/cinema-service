// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package stores is a generated GoMock package.
package stores

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/vageeshabr/cinema-service/internal/models"
)

// MockMovieStorer is a mock of MovieStorer interface.
type MockMovieStorer struct {
	ctrl     *gomock.Controller
	recorder *MockMovieStorerMockRecorder
}

// MockMovieStorerMockRecorder is the mock recorder for MockMovieStorer.
type MockMovieStorerMockRecorder struct {
	mock *MockMovieStorer
}

// NewMockMovieStorer creates a new mock instance.
func NewMockMovieStorer(ctrl *gomock.Controller) *MockMovieStorer {
	mock := &MockMovieStorer{ctrl: ctrl}
	mock.recorder = &MockMovieStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMovieStorer) EXPECT() *MockMovieStorerMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockMovieStorer) Get(ctx context.Context, pageNo int) ([]*models.Movie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, pageNo)
	ret0, _ := ret[0].([]*models.Movie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMovieStorerMockRecorder) Get(ctx, pageNo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMovieStorer)(nil).Get), ctx, pageNo)
}
